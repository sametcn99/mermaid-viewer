import {
	configureStore,
	type ThunkAction,
	type AnyAction,
} from "@reduxjs/toolkit";
import deviceReducer from "./deviceSlice";
import mermaidReducer from "./mermaidSlice";
import resizablePanelsReducer from "./resizablePanelsSlice";
import templateCollectionsReducer from "./templateCollectionsSlice";

export const store = configureStore({
	reducer: {
		mermaid: mermaidReducer,
		resizablePanels: resizablePanelsReducer,
		templateCollections: templateCollectionsReducer,
		device: deviceReducer,
	},
	// Enforce serializable checks but ignore functions generated by third party libs
	middleware: (getDefaultMiddleware) =>
		getDefaultMiddleware({
			serializableCheck: false,
		}),
});

export type RootState = ReturnType<typeof store.getState>;
export type AppDispatch = typeof store.dispatch;
export type AppThunk<ReturnType = void> = ThunkAction<
	ReturnType,
	RootState,
	undefined,
	AnyAction
>;
